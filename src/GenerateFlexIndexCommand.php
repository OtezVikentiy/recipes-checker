<?php

/*
 * (c) Fabien Potencier <fabien@symfony.com>
 *
 * For the full copyright and license information, please view the LICENSE
 * file that was distributed with this source code.
 */

namespace App;

use Symfony\Component\Console\Attribute\AsCommand;
use Symfony\Component\Console\Command\Command;
use Symfony\Component\Console\Input\InputArgument;
use Symfony\Component\Console\Input\InputInterface;
use Symfony\Component\Console\Output\OutputInterface;
use Symfony\Component\HttpClient\HttpClient;

#[AsCommand(name: 'generate:flex-index', description: 'Generates the index.json required by Flex')]
class GenerateFlexIndexCommand extends Command
{
    protected function configure(): void
    {
        $this
            ->addArgument('repository', InputArgument::REQUIRED, 'The name of the GitHub repository')
            ->addArgument('branch_prefix', InputArgument::REQUIRED, 'The prefix of the branches created for each recipe')
            ->addOption('contrib')
        ;
    }

    protected function execute(InputInterface $input, OutputInterface $output): int
    {
        $aliases = $recipes = [];

        // stdin usually generated by `git ls-tree HEAD */*/*`

        while (false !== $line = fgets(STDIN)) {
            [$tree, $package] = explode("\t", trim($line));
            [,, $tree] = explode(' ', $tree);

            if (!file_exists($package.'/manifest.json')) {
                continue;
            }

            $manifest = json_decode(file_get_contents($package.'/manifest.json'), true);
            $version = substr($package, 1 + strrpos($package, '/'));
            $package = substr($package, 0, -1 - \strlen($version));

            foreach ($manifest['aliases'] ?? [] as $alias) {
                $aliases[$alias] = $package;
                $aliases[str_replace('-', '', $alias)] = $package;
            }

            if (0 === strpos($package, 'symfony/') && '-pack' !== substr($package, -5)) {
                $alias = substr($package, 8);
                $aliases[$alias] = $package;
                $aliases[str_replace('-', '', $alias)] = $package;
            }

            $recipes[$package][$version] = $tree;
            uksort($recipes[$package], 'strnatcmp');
        }

        uksort($aliases, 'strnatcmp');
        uksort($recipes, 'strnatcmp');

        $repository = $input->getArgument('repository');
        $branchPrefix = $input->getArgument('branch_prefix');
        $contrib = $input->getOption('contrib');

        $output->writeln(json_encode([
            'aliases' => $aliases,
            'recipes' => $recipes,
            'versions' => $contrib ? [] : HttpClient::create()->request('GET', 'https://flex.symfony.com/versions.json')->toArray(),
            'git-url' => sprintf('https://github.com/%s.git', $repository),
            'branch-prefix' => $branchPrefix,
            'tree-template' => sprintf('https://github.com/%s/tree/{tree}/{package}/{version}', $repository),
            'dist-template' => sprintf('https://codeload.github.com/%s/zip/refs/heads/%s/{package}', $repository, $branchPrefix),
            'is-contrib' => $contrib,
        ], JSON_PRETTY_PRINT | JSON_UNESCAPED_SLASHES));

        return 0;
    }
}
